{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karyos\\\\Desktop\\\\Mem\\\\src\\\\projeThree\\\\comp\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Db from '../Bb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [db, setdb] = useState(Db);\n  const [mem, setMem] = useState({\n    url: '',\n    top: '',\n    bot: ''\n  });\n  const HadleChange = e => {\n    e.preventDefault();\n    setMem(pre => {\n      return {\n        ...pre,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n  const HadleClick = event => {\n    event.preventDefault();\n    const memRandom = Math.floor(Math.random() * db.length);\n    setMem(pre => {\n      return {\n        ...pre,\n        url: db[memRandom].url\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: mem.top,\n          onChange: HadleChange,\n          name: \"top\",\n          className: \"body-input\",\n          type: \"text\",\n          placeholder: \"Top text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: mem.bot,\n          onChange: HadleChange,\n          name: \"bot\",\n          className: \"body-input\",\n          type: \"text\",\n          placeholder: \"Botton text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => HadleClick(event),\n        className: \"body-button\",\n        children: [\"Get a new meme image\", /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"body-button-img\",\n          src: \"./proje3/indir.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), mem.url && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h2-top\",\n      children: mem.top\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), mem.url && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \" main-meme\",\n      src: mem.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), mem.url && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h2-bot\",\n      children: mem.bot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"16k1Z3i1arthAy0jVOuy1PTEZfU=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","Db","jsxDEV","_jsxDEV","Body","_s","db","setdb","mem","setMem","url","top","bot","HadleChange","e","preventDefault","pre","target","name","value","HadleClick","event","memRandom","Math","floor","random","length","children","onChange","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["C:/Users/Karyos/Desktop/Mem/src/projeThree/comp/Body.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Db from '../Bb'\r\n\r\n\r\nconst Body = () => {\r\n  const [db,setdb] =useState(Db)\r\n\r\nconst [mem ,setMem]  = useState({\r\nurl : '',\r\ntop:'',\r\nbot :''\r\n})\r\n \r\n\r\n  \r\n\r\n\r\n\r\nconst HadleChange = (e)=>{\r\n  e.preventDefault()\r\n  setMem(pre=>{return{\r\n    ...pre, [e.target.name] : e.target.value\r\n  }})\r\n \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst HadleClick =(event)=>{\r\n  event.preventDefault()\r\n  const memRandom = Math.floor(Math.random()*db.length) \r\n\r\n  setMem(pre=>{return {\r\n...pre,  url:db[memRandom].url \r\n\r\n  }})\r\n \r\n\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n<div>\r\n<input  value={mem.top} onChange={HadleChange} name='top' className='body-input' type='text' placeholder='Top text'/>\r\n<input  value ={mem.bot}onChange={HadleChange} name='bot' className='body-input' type='text' placeholder='Botton text'/>\r\n\r\n</div>\r\n<button \r\nonClick={(event)=>HadleClick(event)}\r\n className='body-button'>Get a new meme image \r\n<img \r\nclassName='body-button-img' \r\nsrc='./proje3/indir.jpg'/> \r\n</button>\r\n\r\n      </form>\r\n\r\n{mem.url&&<div className='h2-top'>{mem.top}</div>}\r\n{mem.url&&<img className=' main-meme' src={mem.url}/>}\r\n{mem.url&&<div className='h2-bot'>{mem.bot}</div>}\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}